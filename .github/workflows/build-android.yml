name: Android Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  Android:
    runs-on: windows-latest
    env:
      VS_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise
      MSBUILD_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Msbuild\Current\Bin\
    if: False

    steps:
      # Checkout Repository
      - name: Checkout
        uses: actions/checkout@v3.3.0
        #### <---- FOR PRIVATE REPOS ----> ####
        #with:
        #  token: ${{ secrets.REPO_TOKEN }}
        #  submodules: recursive

      # Cache Submodules Handler (Reuse submodules from last run to speed up workflow)
      - name: Cache Submodules
        id: CacheStep
        uses: actions/cache@v3.2.5
        env:
          cache-name: cache-submodules-${{ runner.os }}
        with:
          path: ${{github.workspace}}/external
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('.gitmodules') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Run Build Script (Init Submodules)
      - name: Run Build Script (Init Submodules)
        if: steps.CacheStep.outputs.cache-hit != 'true'
        shell: powershell
        run: ${{github.workspace}}/build.bat --release --android

      # Run Build Script (Skip Init Submodules)
      - name: Run Build Script (Skip Init Submodules)
        if: steps.CacheStep.outputs.cache-hit == 'true'
        shell: powershell
        run: ${{github.workspace}}/build.bat --release --skip-submodules --android

      # Execute tests defined by the CMake configuration.
      - name: Run CTest
        shell: powershell
        working-directory: ${{github.workspace}}/out/build/Android/arm-release
        run: ctest -C ${{env.BUILD_TYPE}}
